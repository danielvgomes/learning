[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.589844, 0, 0, 1 )

[sub_resource type="NoiseTexture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
uniform sampler2D tex_frg_3;


void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0;
	float n_out2p1;
	n_out2p0 = vec3(0.589844,0.000000,0.000000);
	n_out2p1 = 1.000000;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = vec4(0.0);
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ROUGHNESS = dot(n_out3p0,vec3(0.333333,0.333333,0.333333));

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 480, 20 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 200, 80 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 20, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 3 )

[resource]
shader = SubResource( 4 )
